<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes</title>
    <link>http://shabinesh.github.io/notes/</link>
    <description>Recent content on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 May 2020 17:10:38 +0200</lastBuildDate>
    
	<atom:link href="http://shabinesh.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Reflect</title>
      <link>http://shabinesh.github.io/notes/golang-reflect/</link>
      <pubDate>Tue, 19 May 2020 17:10:38 +0200</pubDate>
      
      <guid>http://shabinesh.github.io/notes/golang-reflect/</guid>
      <description>Reflection in Golang  Incase you are here looking to learn about reflection, a better resource is https://blog.golang.org/laws-of-reflection   Interfaces in Go are types which hold concrete value and underlying type of the value with a precondition that value should implement methods of the interface. For example; types implementing Read([]byte) (int, error) method satisfy the io.Reader interface. However interface{}, without any method definition will match all types.  A struct type can be assigned to an empty interface, the assertion is the concrete type should implement the methods of the interface type.</description>
    </item>
    
    <item>
      <title>Docker Golang</title>
      <link>http://shabinesh.github.io/notes/docker-golang/</link>
      <pubDate>Fri, 08 May 2020 13:53:26 +0200</pubDate>
      
      <guid>http://shabinesh.github.io/notes/docker-golang/</guid>
      <description>again this is for my self reference or for easy copy-paste for new projects.  Assume this is the production grade program we need to dockerize and run. package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;saying hello to the world&amp;#34;) }  Basic  FROM golang:1.14-alpine as builder WORKDIR /go/src/github.com/shabinesh/prog COPY main.go . COPY vendor ./vendor RUN go build -o main . FROM alpine:latest RUN apk --no-cache add ca-certificates WORKDIR / COPY --from=0 /go/src/github.</description>
    </item>
    
    <item>
      <title>Hiragana First Steps</title>
      <link>http://shabinesh.github.io/notes/japanese-hiragana-first-steps/</link>
      <pubDate>Tue, 22 May 2018 23:43:08 +0200</pubDate>
      
      <guid>http://shabinesh.github.io/notes/japanese-hiragana-first-steps/</guid>
      <description> Learning Japanese 1   Welcome to learning Japanese, this is how I am planning to learn Japanese without a teacher. I am writing this series for myself to keep track of my progress, more of notes.  I already have some materials given by my teacher and know some fundamentals. Here are some links I find very useful.    https://www.tofugu.com/japanese/learn-hiragana/    https://www.nhk.or.jp/lesson/english/syllabary/index.html    I am going to follow my teacher’s methods: learn the Hiragana characters, learn some words and create basic sentences  Laying the strong foundations: mastering the vowels    あ aa (pronounce a as in all)   い e (pronounce e as in enough)   う Uh    え é (pronounce e as in hey)   お ô (pronounce o as in Hospital)     Words with above characters    あい Love   あお Blue   いえ House   いいえ No   うえ Top   おい Nephew   あう Meet    Spoken helpers:     Yes is pronounced as ‘Hai’    No is pronounced as いいえ (e-e-a)   </description>
    </item>
    
  </channel>
</rss>